#version 450
// keep this in sync with code in main
#define NUM_BUFFERS 4

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D image;
layout(rgba32f, binding = 1) uniform image2D images[NUM_BUFFERS];


// this shader accumulates previous images
void main() {
    
    ivec2 idx = ivec2(
        gl_GlobalInvocationID.x,
        gl_GlobalInvocationID.y
    );

    ivec2 size = imageSize(image);

    if (idx.x < size.x && idx.y < size.y) {
        vec3 color = vec3(0);
        float weight = 0;
        for (int i = int(NUM_BUFFERS) - 1; i >= 0; i--) {
            vec4 img_color = imageLoad(images[i], idx);
            
            color += img_color.a * img_color.rgb;
            weight += img_color.a;
        }
        color /= weight;

        imageStore(image, idx, vec4(color, 1.0));
    }
}