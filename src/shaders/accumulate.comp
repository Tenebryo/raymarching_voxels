#version 450
// keep this in sync with code in main
#define NUM_BUFFERS 8

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D new_image;
layout(rgba32f, binding = 1) uniform image2D buffer_image;
layout(r32f, binding = 2) uniform image2D alpha_image;




// this shader accumulates previous images
void main() {
    
    ivec2 idx = ivec2(
        gl_GlobalInvocationID.x,
        gl_GlobalInvocationID.y
    );

    ivec2 size = imageSize(new_image);

    if (idx.x < size.x && idx.y < size.y) {
            // load the pixels from the storage and 
        vec4 new_color = imageLoad(new_image, idx);
        vec4 buffer_color = imageLoad(buffer_image, idx);

        vec4 alpha = imageLoad(alpha_image, idx);

        buffer_color = alpha * new_color + (1 - alpha) * buffer_color;

        imageStore(buffer_image, idx, buffer_color);
    }
}